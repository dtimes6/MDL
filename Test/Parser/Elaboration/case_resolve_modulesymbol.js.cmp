--------------------------------
before-elab:
--------------------------------
[ { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'module_decl',
    childs: { name: [Object], inheritance: null, stmt: [Object] },
    value: null,
    scope: { symbol: [Object], type: {} } },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'function_decl',
    childs: 
     { proc: false,
       name: [Object],
       params: [],
       type: null,
       stmt: [Object] },
    value: null,
    scope: { symbol: {}, type: {} } },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'func_call',
    childs: { func: [Object], ref: null, params: null },
    value: null,
    scope: null } ]
null
--------------------------------
after-elab:
--------------------------------
[ { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'element',
    childs: { name: [Object] },
    value: null,
    scope: null },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'module_decl',
    childs: { name: [Object], inheritance: null, stmt: [Object] },
    value: null,
    scope: { symbol: [Object], type: {} } },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'function_decl',
    childs: 
     { proc: false,
       name: [Object],
       params: [],
       type: null,
       stmt: [Object] },
    value: null,
    scope: { symbol: {}, type: {} } },
  { parent: 
     { parent: null,
       type: 'root',
       childs: [Object],
       value: null,
       scope: [Object] },
    type: 'func_call',
    childs: { func: [Object], ref: [Object], params: null },
    value: null,
    scope: null } ]
{ parent: 
   { parent: null,
     type: 'root',
     childs: { stmts: [Object] },
     value: null,
     scope: { symbol: [Object], type: [Object] } },
  type: 'function_decl',
  childs: 
   { proc: false,
     name: 
      { parent: [Circular],
        type: 'identifier',
        childs: [Object],
        value: 'client',
        scope: null },
     params: [],
     type: null,
     stmt: 
      { parent: [Circular],
        type: 'block',
        childs: [Object],
        value: null,
        scope: [Object] } },
  value: null,
  scope: { symbol: {}, type: {} } }
{ parent: 
   { parent: 
      { parent: [Object],
        type: 'process_decl',
        childs: [Object],
        value: null,
        scope: [Object] },
     type: 'identifier',
     childs: { ref: [Circular] },
     value: 'timeout',
     scope: null },
  type: 'process_decl',
  childs: 
   { proc: true,
     name: 
      { parent: [Object],
        type: 'identifier',
        childs: [Object],
        value: 'timeout',
        scope: null },
     params: [],
     type: 
      { parent: [Circular],
        type: 'symbol',
        childs: [Object],
        value: 'net8',
        scope: null },
     stmt: 
      { parent: [Circular],
        type: 'block',
        childs: [Object],
        value: null,
        scope: [Object] } },
  value: null,
  scope: { symbol: {}, type: {} } }
{ parent: 
   { parent: 
      { parent: [Object],
        type: 'if',
        childs: [Object],
        value: null,
        scope: null },
     type: 'operation',
     childs: { op: '$&&$', params: [Object] },
     value: null,
     scope: null },
  type: 'symbol',
  childs: 
   { path: null,
     name: 'req',
     ref: 
      { parent: [Object],
        type: 'identifier',
        childs: [Object],
        value: 'req',
        scope: null } },
  value: 'req',
  scope: null }
{ parent: 
   { parent: 
      { parent: [Object],
        type: 'operation',
        childs: [Object],
        value: null,
        scope: null },
     type: 'operation',
     childs: { op: '~$', params: [Object] },
     value: null,
     scope: null },
  type: 'symbol',
  childs: 
   { path: null,
     name: 'ack',
     ref: 
      { parent: [Object],
        type: 'identifier',
        childs: [Object],
        value: 'ack',
        scope: null } },
  value: 'ack',
  scope: null }
