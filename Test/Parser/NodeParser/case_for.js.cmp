{ parent: 
   { parent: null,
     type: 'root',
     childs: { stmts: [Object] },
     value: null,
     method: null,
     scope: { symbol: [Object], type: [Object] } },
  type: 'function_decl',
  childs: 
   { proc: false,
     name: 
      { parent: [Circular],
        type: 'identifier',
        childs: [Object],
        value: 'func_for',
        method: 'method_buildin_identifier',
        scope: null },
     type: 
      { parent: [Circular],
        type: 'type',
        childs: [Object],
        value: null,
        method: 'method_buildin_type',
        scope: null },
     params: [ [Object] ],
     stmt: 
      { parent: [Circular],
        type: 'block',
        childs: [Object],
        value: null,
        method: 'method_buildin_statement_block',
        scope: [Object] } },
  value: null,
  method: 'method_buildin_function_decl',
  scope: { symbol: { counter: [Object] }, type: {} } }
{ parent: 
   { parent: 
      { parent: [Object],
        type: 'function_decl',
        childs: [Object],
        value: null,
        method: 'method_buildin_function_decl',
        scope: [Object] },
     type: 'block',
     childs: { stmts: [Object] },
     value: null,
     method: 'method_buildin_statement_block',
     scope: { symbol: [Object], type: {} } },
  type: 'for',
  childs: 
   { init: 
      { parent: [Circular],
        type: 'inst_decl',
        childs: [Object],
        value: null,
        method: 'method_buildin_inst_decl_assign',
        scope: null },
     cond: 
      { parent: [Circular],
        type: 'operation',
        childs: [Object],
        value: null,
        method: '$<$',
        scope: null },
     step: 
      { parent: [Circular],
        type: 'operation',
        childs: [Object],
        value: null,
        method: '++$',
        scope: null },
     tag: null,
     stmt: 
      { parent: [Circular],
        type: 'block',
        childs: [Object],
        value: null,
        method: 'method_buildin_statement_block',
        scope: [Object] } },
  value: null,
  method: 'method_buildin_statement_for',
  scope: { symbol: { i: [Object] }, type: {} } }
